// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: usersvc.proto

package usersvcclient

import (
	"context"

	"github.com/MrLeeang/my-zero/usersvc/usersvc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = usersvc.Request
	Response = usersvc.Response

	CreateUserReq = usersvc.CreateUserReq
	CreateUserResp = usersvc.CreateUserResp

	Usersvc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserResp, error)
	}

	defaultUsersvc struct {
		cli zrpc.Client
	}
)

func NewUsersvc(cli zrpc.Client) Usersvc {
	return &defaultUsersvc{
		cli: cli,
	}
}

func (m *defaultUsersvc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := usersvc.NewUsersvcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultUsersvc) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserResp, error) {
	client := usersvc.NewUsersvcClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}
